{"version":3,"sources":["views/home/index.tsx","../node_modules/ssr-window/dist/ssr-window.esm.js","../node_modules/swiper/dist/js/swiper.esm.bundle.js","../node_modules/dom7/dist/dom7.modular.js","webpack:///./src/views/home/index.scss?9fa5","views/home/index.scss","../node_modules/swiper/dist/css/swiper.min.css","images/swiper/swiper1.jpg","images/swiper/swiper2.jpg","images/swiper/swiper3.jpg","images/swiper/swiper4.jpg"],"names":["HeaderBar","_super","props","call","this","__WEBPACK_IMPORTED_MODULE_0_tslib__","prototype","componentDidMount","swiper","__WEBPACK_IMPORTED_MODULE_2_swiper__","speed","autoplay","delay","disableOnInteraction","direction","centeredSlides","loop","effect","cubeEffect","slideShadows","shadow","console","log","render","__WEBPACK_IMPORTED_MODULE_1_react__","className","src","__WEBPACK_IMPORTED_MODULE_4__images_swiper_swiper1_jpg___default","a","__WEBPACK_IMPORTED_MODULE_5__images_swiper_swiper2_jpg___default","__WEBPACK_IMPORTED_MODULE_6__images_swiper_swiper3_jpg___default","__WEBPACK_IMPORTED_MODULE_7__images_swiper_swiper4_jpg___default","__webpack_require__","d","__webpack_exports__","win","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","__WEBPACK_IMPORTED_MODULE_0_dom7_dist_dom7_modular__","__WEBPACK_IMPORTED_MODULE_1_ssr_window__","Methods","addClass","removeClass","hasClass","toggleClass","attr","removeAttr","data","transform","transition","on","off","trigger","transitionEnd","outerWidth","outerHeight","offset","css","each","html","text","is","index","eq","append","prepend","next","nextAll","prev","prevAll","parent","parents","closest","find","remove","add","styles","Object","keys","forEach","methodName","fn","Utils","[object Object]","obj","object","key","e","nextTick","callback","now","el","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","webkitTransform","split","length","map","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","parseFloat","m42","url","query","i","params","param","urlToParse","href","indexOf","filter","paramsPart","decodeURIComponent","undefined","isObject","o","constructor","args","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","Browser","isIE","match","isEdge","isSafari","ua","toLowerCase","isUiWebView","test","SwiperClass","self","eventsListeners","eventName","events","handler","priority","method","event","onceHandler","apply","f7proxy","eventHandler","splice","context","Array","isArray","slice","handlers","push","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","Class","name","proto","static","install","m","installModule","update","updateSize","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","abs","slidesPerGroup","newSlidesGrid","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","activeSlides","newHeight","setTransition","activeIndex","offsetHeight","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","target","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","duration","transitionStart","runCallbacks","autoHeight","dir","animating","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","unshift","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","getAttribute","pixelRatio","devicePixelRatio","onResize","offsetWidth","breakpoints","setBreakpoint","freeMode","newTranslate","min","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","j","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","capture","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","navigation","classes","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","$","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","left","scrollLeft","swiperCoord","top","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","value","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","$cubeShadowEl","wrapperRotate","slideAngle","round","tz","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","isHidden","number","toggle","get","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","pause","__WEBPACK_IMPORTED_MODULE_0_ssr_window__","Dom7","arr","selector","els","tempParent","trim","toCreate","innerHTML","nodeType","unique","uniqueArray","classList","contains","attrs","arguments","attrName","removeAttribute","dom7ElementDataStorage","dataKey","elStyle","webkitTransitionDuration","transitionDuration","eventType","targetSelector","listener","handleLiveEvent","eventData","dom7EventData","k","handleEvent","dom7LiveListeners","proxyListener","dom7Listeners","dom7proxy","evt","bubbles","cancelable","dataIndex","dispatchEvent","dom","fireCallBack","includeMargins","box","getBoundingClientRect","clientTop","scrollTop","scrollY","scrollX","prop","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","returnIndex","newChild","tempDiv","firstChild","appendChild","insertBefore","nextElementSibling","nextEls","previousElementSibling","prevEls","parentNode","foundElements","found","removeChild","toAdd","content","hmr","locals","exports"],"mappings":"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","file":"static/js/5.f6df27a0.chunk.js","sourcesContent":["import * as React from 'react';\nimport Swiper from 'swiper';\nimport './index.scss';\nimport swiper1 from '../../images/swiper/swiper1.jpg'\nimport swiper2 from '../../images/swiper/swiper2.jpg'\nimport swiper3 from '../../images/swiper/swiper3.jpg'\nimport swiper4 from '../../images/swiper/swiper4.jpg'\n\nexport default class HeaderBar extends React.Component<{}, {}>{\n    constructor(props: {}) {\n        super(props)\n    };\n\n    public componentDidMount() {\n        const swiper = new Swiper('.swiper-container', {\n            speed: 500,\n            autoplay: {\n                delay: 7000,\n                disableOnInteraction: false\n            },\n            direction: 'horizontal',\n            centeredSlides: true,\n            loop: true,\n            effect: 'cube',\n            cubeEffect: {\n                slideShadows: false,\n                shadow: false\n            },\n        });\n        console.log(swiper)\n    }\n\n    public render() {\n        return (\n            <div className=\"swiper-container home-swiper\">\n                <div className=\"swiper-wrapper\">\n                    <div className=\"swiper-slide\">\n                        <img src={swiper1} />\n                    </div>\n                    <div className=\"swiper-slide\">\n                        <img src={swiper2} />\n                    </div>\n                    <div className=\"swiper-slide\">\n                        <img src={swiper3} />\n                    </div>\n                    <div className=\"swiper-slide\">\n                        <img src={swiper4} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/views/home/index.tsx","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = 1079\n// module chunks = 5","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.esm.bundle.js\n// module id = 1087\n// module chunks = 5","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = 1088\n// module chunks = 5","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./index.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./index.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./index.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/home/index.scss\n// module id = 1089\n// module chunks = 5","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js!swiper/dist/css/swiper.min.css\"), \"\");\n\n// module\nexports.push([module.id, \".home-swiper {\\n  text-align: center; }\\n  .home-swiper img {\\n    width: 600px;\\n    height: 600px; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./src/views/home/index.scss\n// module id = 1090\n// module chunks = 5","exports = module.exports = require(\"../../../css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * Swiper 4.5.0\\n * Most modern mobile touch slider and framework with hardware accelerated transitions\\n * http://www.idangero.us/swiper/\\n *\\n * Copyright 2014-2019 Vladimir Kharlampidi\\n *\\n * Released under the MIT License\\n *\\n * Released on: February 22, 2019\\n */\\n.swiper-container{margin:0 auto;position:relative;overflow:hidden;list-style:none;padding:0;z-index:1}.swiper-container-no-flexbox .swiper-slide{float:left}.swiper-container-vertical>.swiper-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.swiper-wrapper{position:relative;width:100%;height:100%;z-index:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;-o-transition-property:transform;transition-property:transform;transition-property:transform,-webkit-transform;-webkit-box-sizing:content-box;box-sizing:content-box}.swiper-container-android .swiper-slide,.swiper-wrapper{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.swiper-container-multirow>.swiper-wrapper{-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.swiper-container-free-mode>.swiper-wrapper{-webkit-transition-timing-function:ease-out;-o-transition-timing-function:ease-out;transition-timing-function:ease-out;margin:0 auto}.swiper-slide{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;width:100%;height:100%;position:relative;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;-o-transition-property:transform;transition-property:transform;transition-property:transform,-webkit-transform}.swiper-slide-invisible-blank{visibility:hidden}.swiper-container-autoheight,.swiper-container-autoheight .swiper-slide{height:auto}.swiper-container-autoheight .swiper-wrapper{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-transition-property:height,-webkit-transform;transition-property:height,-webkit-transform;-o-transition-property:transform,height;transition-property:transform,height;transition-property:transform,height,-webkit-transform}.swiper-container-3d{-webkit-perspective:1200px;perspective:1200px}.swiper-container-3d .swiper-cube-shadow,.swiper-container-3d .swiper-slide,.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top,.swiper-container-3d .swiper-wrapper{-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top{position:absolute;left:0;top:0;width:100%;height:100%;pointer-events:none;z-index:10}.swiper-container-3d .swiper-slide-shadow-left{background-image:-webkit-gradient(linear,right top,left top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(right,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(right,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to left,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-3d .swiper-slide-shadow-right{background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(left,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(left,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to right,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-3d .swiper-slide-shadow-top{background-image:-webkit-gradient(linear,left bottom,left top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(bottom,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(bottom,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to top,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-3d .swiper-slide-shadow-bottom{background-image:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(top,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(top,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to bottom,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-wp8-horizontal,.swiper-container-wp8-horizontal>.swiper-wrapper{-ms-touch-action:pan-y;touch-action:pan-y}.swiper-container-wp8-vertical,.swiper-container-wp8-vertical>.swiper-wrapper{-ms-touch-action:pan-x;touch-action:pan-x}.swiper-button-next,.swiper-button-prev{position:absolute;top:50%;width:27px;height:44px;margin-top:-22px;z-index:10;cursor:pointer;background-size:27px 44px;background-position:center;background-repeat:no-repeat}.swiper-button-next.swiper-button-disabled,.swiper-button-prev.swiper-button-disabled{opacity:.35;cursor:auto;pointer-events:none}.swiper-button-prev,.swiper-container-rtl .swiper-button-next{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23007aff'%2F%3E%3C%2Fsvg%3E\\\");left:10px;right:auto}.swiper-button-next,.swiper-container-rtl .swiper-button-prev{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23007aff'%2F%3E%3C%2Fsvg%3E\\\");right:10px;left:auto}.swiper-button-prev.swiper-button-white,.swiper-container-rtl .swiper-button-next.swiper-button-white{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23ffffff'%2F%3E%3C%2Fsvg%3E\\\")}.swiper-button-next.swiper-button-white,.swiper-container-rtl .swiper-button-prev.swiper-button-white{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23ffffff'%2F%3E%3C%2Fsvg%3E\\\")}.swiper-button-prev.swiper-button-black,.swiper-container-rtl .swiper-button-next.swiper-button-black{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23000000'%2F%3E%3C%2Fsvg%3E\\\")}.swiper-button-next.swiper-button-black,.swiper-container-rtl .swiper-button-prev.swiper-button-black{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23000000'%2F%3E%3C%2Fsvg%3E\\\")}.swiper-button-lock{display:none}.swiper-pagination{position:absolute;text-align:center;-webkit-transition:.3s opacity;-o-transition:.3s opacity;transition:.3s opacity;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);z-index:10}.swiper-pagination.swiper-pagination-hidden{opacity:0}.swiper-container-horizontal>.swiper-pagination-bullets,.swiper-pagination-custom,.swiper-pagination-fraction{bottom:10px;left:0;width:100%}.swiper-pagination-bullets-dynamic{overflow:hidden;font-size:0}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33);position:relative}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev{-webkit-transform:scale(.66);-ms-transform:scale(.66);transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next{-webkit-transform:scale(.66);-ms-transform:scale(.66);transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33)}.swiper-pagination-bullet{width:8px;height:8px;display:inline-block;border-radius:100%;background:#000;opacity:.2}button.swiper-pagination-bullet{border:none;margin:0;padding:0;-webkit-box-shadow:none;box-shadow:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}.swiper-pagination-clickable .swiper-pagination-bullet{cursor:pointer}.swiper-pagination-bullet-active{opacity:1;background:#007aff}.swiper-container-vertical>.swiper-pagination-bullets{right:10px;top:50%;-webkit-transform:translate3d(0,-50%,0);transform:translate3d(0,-50%,0)}.swiper-container-vertical>.swiper-pagination-bullets .swiper-pagination-bullet{margin:6px 0;display:block}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:8px}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{display:inline-block;-webkit-transition:.2s top,.2s -webkit-transform;transition:.2s top,.2s -webkit-transform;-o-transition:.2s transform,.2s top;transition:.2s transform,.2s top;transition:.2s transform,.2s top,.2s -webkit-transform}.swiper-container-horizontal>.swiper-pagination-bullets .swiper-pagination-bullet{margin:0 4px}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);white-space:nowrap}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transition:.2s left,.2s -webkit-transform;transition:.2s left,.2s -webkit-transform;-o-transition:.2s transform,.2s left;transition:.2s transform,.2s left;transition:.2s transform,.2s left,.2s -webkit-transform}.swiper-container-horizontal.swiper-container-rtl>.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transition:.2s right,.2s -webkit-transform;transition:.2s right,.2s -webkit-transform;-o-transition:.2s transform,.2s right;transition:.2s transform,.2s right;transition:.2s transform,.2s right,.2s -webkit-transform}.swiper-pagination-progressbar{background:rgba(0,0,0,.25);position:absolute}.swiper-pagination-progressbar .swiper-pagination-progressbar-fill{background:#007aff;position:absolute;left:0;top:0;width:100%;height:100%;-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);-webkit-transform-origin:left top;-ms-transform-origin:left top;transform-origin:left top}.swiper-container-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill{-webkit-transform-origin:right top;-ms-transform-origin:right top;transform-origin:right top}.swiper-container-horizontal>.swiper-pagination-progressbar,.swiper-container-vertical>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite{width:100%;height:4px;left:0;top:0}.swiper-container-horizontal>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,.swiper-container-vertical>.swiper-pagination-progressbar{width:4px;height:100%;left:0;top:0}.swiper-pagination-white .swiper-pagination-bullet-active{background:#fff}.swiper-pagination-progressbar.swiper-pagination-white{background:rgba(255,255,255,.25)}.swiper-pagination-progressbar.swiper-pagination-white .swiper-pagination-progressbar-fill{background:#fff}.swiper-pagination-black .swiper-pagination-bullet-active{background:#000}.swiper-pagination-progressbar.swiper-pagination-black{background:rgba(0,0,0,.25)}.swiper-pagination-progressbar.swiper-pagination-black .swiper-pagination-progressbar-fill{background:#000}.swiper-pagination-lock{display:none}.swiper-scrollbar{border-radius:10px;position:relative;-ms-touch-action:none;background:rgba(0,0,0,.1)}.swiper-container-horizontal>.swiper-scrollbar{position:absolute;left:1%;bottom:3px;z-index:50;height:5px;width:98%}.swiper-container-vertical>.swiper-scrollbar{position:absolute;right:3px;top:1%;z-index:50;width:5px;height:98%}.swiper-scrollbar-drag{height:100%;width:100%;position:relative;background:rgba(0,0,0,.5);border-radius:10px;left:0;top:0}.swiper-scrollbar-cursor-drag{cursor:move}.swiper-scrollbar-lock{display:none}.swiper-zoom-container{width:100%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;text-align:center}.swiper-zoom-container>canvas,.swiper-zoom-container>img,.swiper-zoom-container>svg{max-width:100%;max-height:100%;-o-object-fit:contain;object-fit:contain}.swiper-slide-zoomed{cursor:move}.swiper-lazy-preloader{width:42px;height:42px;position:absolute;left:50%;top:50%;margin-left:-21px;margin-top:-21px;z-index:10;-webkit-transform-origin:50%;-ms-transform-origin:50%;transform-origin:50%;-webkit-animation:swiper-preloader-spin 1s steps(12,end) infinite;animation:swiper-preloader-spin 1s steps(12,end) infinite}.swiper-lazy-preloader:after{display:block;content:'';width:100%;height:100%;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D'0%200%20120%20120'%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20xmlns%3Axlink%3D'http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink'%3E%3Cdefs%3E%3Cline%20id%3D'l'%20x1%3D'60'%20x2%3D'60'%20y1%3D'7'%20y2%3D'27'%20stroke%3D'%236c6c6c'%20stroke-width%3D'11'%20stroke-linecap%3D'round'%2F%3E%3C%2Fdefs%3E%3Cg%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(30%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(60%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(90%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(120%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(150%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.37'%20transform%3D'rotate(180%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.46'%20transform%3D'rotate(210%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.56'%20transform%3D'rotate(240%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.66'%20transform%3D'rotate(270%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.75'%20transform%3D'rotate(300%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.85'%20transform%3D'rotate(330%2060%2C60)'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");background-position:50%;background-size:100%;background-repeat:no-repeat}.swiper-lazy-preloader-white:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D'0%200%20120%20120'%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20xmlns%3Axlink%3D'http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink'%3E%3Cdefs%3E%3Cline%20id%3D'l'%20x1%3D'60'%20x2%3D'60'%20y1%3D'7'%20y2%3D'27'%20stroke%3D'%23fff'%20stroke-width%3D'11'%20stroke-linecap%3D'round'%2F%3E%3C%2Fdefs%3E%3Cg%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(30%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(60%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(90%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(120%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(150%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.37'%20transform%3D'rotate(180%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.46'%20transform%3D'rotate(210%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.56'%20transform%3D'rotate(240%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.66'%20transform%3D'rotate(270%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.75'%20transform%3D'rotate(300%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.85'%20transform%3D'rotate(330%2060%2C60)'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\")}@-webkit-keyframes swiper-preloader-spin{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes swiper-preloader-spin{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.swiper-container .swiper-notification{position:absolute;left:0;top:0;pointer-events:none;opacity:0;z-index:-1000}.swiper-container-fade.swiper-container-free-mode .swiper-slide{-webkit-transition-timing-function:ease-out;-o-transition-timing-function:ease-out;transition-timing-function:ease-out}.swiper-container-fade .swiper-slide{pointer-events:none;-webkit-transition-property:opacity;-o-transition-property:opacity;transition-property:opacity}.swiper-container-fade .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-fade .swiper-slide-active,.swiper-container-fade .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-cube{overflow:visible}.swiper-container-cube .swiper-slide{pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1;visibility:hidden;-webkit-transform-origin:0 0;-ms-transform-origin:0 0;transform-origin:0 0;width:100%;height:100%}.swiper-container-cube .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-cube.swiper-container-rtl .swiper-slide{-webkit-transform-origin:100% 0;-ms-transform-origin:100% 0;transform-origin:100% 0}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-next,.swiper-container-cube .swiper-slide-next+.swiper-slide,.swiper-container-cube .swiper-slide-prev{pointer-events:auto;visibility:visible}.swiper-container-cube .swiper-slide-shadow-bottom,.swiper-container-cube .swiper-slide-shadow-left,.swiper-container-cube .swiper-slide-shadow-right,.swiper-container-cube .swiper-slide-shadow-top{z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-container-cube .swiper-cube-shadow{position:absolute;left:0;bottom:0;width:100%;height:100%;background:#000;opacity:.6;-webkit-filter:blur(50px);filter:blur(50px);z-index:0}.swiper-container-flip{overflow:visible}.swiper-container-flip .swiper-slide{pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1}.swiper-container-flip .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-flip .swiper-slide-active,.swiper-container-flip .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-flip .swiper-slide-shadow-bottom,.swiper-container-flip .swiper-slide-shadow-left,.swiper-container-flip .swiper-slide-shadow-right,.swiper-container-flip .swiper-slide-shadow-top{z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-container-coverflow .swiper-wrapper{-ms-perspective:1200px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/swiper/dist/css/swiper.min.css\n// module id = 1091\n// module chunks = 5","module.exports = __webpack_public_path__ + \"static/media/swiper1.a2f85c0f.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/swiper/swiper1.jpg\n// module id = 1092\n// module chunks = 5","module.exports = __webpack_public_path__ + \"static/media/swiper2.cfccb271.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/swiper/swiper2.jpg\n// module id = 1093\n// module chunks = 5","module.exports = __webpack_public_path__ + \"static/media/swiper3.de992282.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/swiper/swiper3.jpg\n// module id = 1094\n// module chunks = 5","module.exports = __webpack_public_path__ + \"static/media/swiper4.c44ce194.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/swiper/swiper4.jpg\n// module id = 1095\n// module chunks = 5"],"sourceRoot":""}