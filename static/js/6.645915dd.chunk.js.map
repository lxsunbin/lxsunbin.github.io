{"version":3,"sources":["views/home/index.tsx","../node_modules/ssr-window/dist/ssr-window.esm.js","../node_modules/swiper/dist/js/swiper.esm.bundle.js","../node_modules/dom7/dist/dom7.modular.js","webpack:///./src/views/home/index.scss?9fa5","views/home/index.scss","../node_modules/swiper/dist/css/swiper.min.css","images/swiper/swiper1.jpg","images/swiper/swiper2.jpg","images/swiper/swiper3.jpg","images/swiper/swiper4.jpg"],"names":["HeaderBar","_super","props","call","this","__WEBPACK_IMPORTED_MODULE_0_tslib__","prototype","componentDidMount","__WEBPACK_IMPORTED_MODULE_2_swiper__","speed","autoplay","delay","disableOnInteraction","direction","centeredSlides","loop","effect","cubeEffect","slideShadows","shadow","render","__WEBPACK_IMPORTED_MODULE_1_react__","className","src","__WEBPACK_IMPORTED_MODULE_4__images_swiper_swiper1_jpg___default","a","__WEBPACK_IMPORTED_MODULE_5__images_swiper_swiper2_jpg___default","__WEBPACK_IMPORTED_MODULE_6__images_swiper_swiper3_jpg___default","__WEBPACK_IMPORTED_MODULE_7__images_swiper_swiper4_jpg___default","__webpack_require__","d","__webpack_exports__","win","doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","window","navigator","userAgent","history","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","__WEBPACK_IMPORTED_MODULE_0_dom7_dist_dom7_modular__","__WEBPACK_IMPORTED_MODULE_1_ssr_window__","Methods","addClass","removeClass","hasClass","toggleClass","attr","removeAttr","data","transform","transition","on","off","trigger","transitionEnd","outerWidth","outerHeight","offset","css","each","html","text","is","index","eq","append","prepend","next","nextAll","prev","prevAll","parent","parents","closest","find","remove","add","styles","Object","keys","forEach","methodName","fn","Utils","[object Object]","obj","object","key","e","nextTick","callback","now","el","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","webkitTransform","split","length","map","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","parseFloat","m42","url","query","i","params","param","urlToParse","href","indexOf","filter","paramsPart","decodeURIComponent","undefined","isObject","o","constructor","args","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","extend","Support","testDiv","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","pointerEnabled","PointerEvent","prefixedPointerEvents","msPointerEnabled","transforms3d","csstransforms3d","flexbox","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","Browser","isIE","match","isEdge","isSafari","ua","toLowerCase","isUiWebView","test","SwiperClass","self","eventsListeners","eventName","events","handler","priority","method","event","onceHandler","apply","f7proxy","eventHandler","splice","context","Array","isArray","slice","handlers","push","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","Class","name","proto","static","install","m","installModule","update","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","abs","slidesPerGroup","newSlidesGrid","setWrapperSize","slidesGridItem","centerInsufficientSlides","allSlidesSize","slideSizeValue","allSlidesOffset","snap","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","activeSlides","newHeight","setTransition","activeIndex","offsetHeight","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","progress","updateProgress","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","updateClickedSlide","target","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","newProgress","x","y","previousTranslate","duration","transitionStart","runCallbacks","autoHeight","dir","animating","slideTo","internal","slideIndex","preventInteractionOnTransition","initialSlide","initialized","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","destroyed","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevSnap","prevIndex","slideReset","slideToClosest","currentSnap","slidesPerViewDynamic","slideToIndex","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","diff","loopDestroy","grabCursor","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","manipulation","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","unshift","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","Device","device","ios","android","androidChrome","desktop","windows","iphone","ipod","ipad","cordova","phonegap","os","osVersion","webView","osVersionArr","metaViewport","minimalUi","getAttribute","pixelRatio","devicePixelRatio","onResize","offsetWidth","breakpoints","setBreakpoint","freeMode","newTranslate","min","defaults","init","touchEventsTarget","edgeSwipeDetection","edgeSwipeThreshold","freeModeMomentum","freeModeMomentumRatio","freeModeMomentumBounce","freeModeMomentumBounceRatio","freeModeMomentumVelocityRatio","freeModeSticky","freeModeMinimumVelocity","breakpointsInverse","touchRatio","touchAngle","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","allowTouchMove","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","preventClicks","preventClicksPropagation","preloadImages","updateOnImagesReady","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","containerModifierClass","wrapperClass","runCallbacksOnInit","prototypes","attachEvents","touchEvents","wrapperEl","onTouchStart","touchEventsData","touches","originalEvent","isTouchEvent","type","which","button","isTouched","isMoved","allowClick","currentX","targetTouches","pageX","currentY","pageY","startX","startY","iOSEdgeSwipeDetection","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","onTouchMove","preventedByNestedSwiper","diffX","diffY","sqrt","atan2","PI","nested","stopPropagation","startTranslate","allowMomentumBounce","disableParentSwiper","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","clickTimeout","currentPos","lastMoveEvent","pop","velocityEvent","distance","velocity","momentumDuration","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","needsLoopFix","j","once","stopIndex","groupSize","ratio","onClick","stopImmediatePropagation","capture","start","passive","move","end","detachEvents","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","wasLocked","navigation","classes","addClasses","classNames","suffixes","suffix","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","extendedDefaults","Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","$","swipers","containerEl","newParams","touchEventsTouch","touchEventsDesktop","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","options","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","left","scrollLeft","swiperCoord","top","returnValue","handle","Keyboard$1","enable","disable","Mousewheel","lastScrollTime","isSupported","element","implementation","hasFeature","isEventSupported","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","sensitivity","timeout","autoplayDisableOnInteraction","stop","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Navigation","$nextEl","$prevEl","disabledClass","lockClass","nextEl","prevEl","onNextClick","onPrevClick","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","hiddenClass","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","pointerPosition","positionRatio","clientX","clientY","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","changedTouches","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","onGestureStart","onGestureChange","onGestureEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","multiplier","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","a11y","makeElFocusable","addElRole","role","addElLabel","label","disableEl","enableEl","$targetEl","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","bulletEl","$bulletEl","paginationBulletMessage","onEnterKey","History","pushState","hashNavigation","paths","getPathValues","value","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","HashNavigation","newHash","watchState","onHashCange","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","running","run","paused","waitForTransition","onTransitionEnd","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","Cube","swiperWidth","swiperHeight","$cubeShadowEl","wrapperRotate","slideAngle","round","tz","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","Flip","flipEffect","limitRotation","rotateY","rotateX","zIndex","Coverflow","coverflowEffect","center","rotate","depth","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","perspectiveOrigin","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","hideOnClick","isHidden","number","toggle","get","loadOnTransitionStart","notificationClass","updateNavigation","updatePagination","setHistory","setHash","pause","__WEBPACK_IMPORTED_MODULE_0_ssr_window__","Dom7","arr","selector","els","tempParent","trim","toCreate","innerHTML","nodeType","unique","uniqueArray","classList","contains","attrs","arguments","attrName","removeAttribute","dom7ElementDataStorage","dataKey","elStyle","webkitTransitionDuration","transitionDuration","eventType","targetSelector","listener","handleLiveEvent","eventData","dom7EventData","k","handleEvent","dom7LiveListeners","proxyListener","dom7Listeners","dom7proxy","evt","bubbles","cancelable","dataIndex","dispatchEvent","dom","fireCallBack","includeMargins","box","getBoundingClientRect","clientTop","scrollTop","scrollY","scrollX","prop","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","returnIndex","newChild","tempDiv","firstChild","appendChild","insertBefore","nextElementSibling","nextEls","previousElementSibling","prevEls","parentNode","foundElements","found","removeChild","toAdd","content","hmr","locals","exports"],"mappings":"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","file":"static/js/6.645915dd.chunk.js","sourcesContent":["import * as React from 'react';\nimport Swiper from 'swiper';\nimport './index.scss';\nimport swiper1 from '../../images/swiper/swiper1.jpg'\nimport swiper2 from '../../images/swiper/swiper2.jpg'\nimport swiper3 from '../../images/swiper/swiper3.jpg'\nimport swiper4 from '../../images/swiper/swiper4.jpg'\n\nexport default class HeaderBar extends React.Component<{}, {}>{\n    constructor(props: {}) {\n        super(props)\n    };\n\n    public componentDidMount() {\n        const swiper = new Swiper('.swiper-container', {\n            speed: 500,\n            autoplay: {\n                delay: 7000,\n                disableOnInteraction: false\n            },\n            direction: 'horizontal',\n            centeredSlides: true,\n            loop: true,\n            effect: 'cube',\n            cubeEffect: {\n                slideShadows: false,\n                shadow: false\n            },\n        });\n        return swiper\n    }\n\n    public render() {\n        return (\n            <div className=\"swiper-container home-swiper\">\n                <div className=\"swiper-wrapper\">\n                    <div className=\"swiper-slide\">\n                        <img src={swiper1} />\n                    </div>\n                    <div className=\"swiper-slide\">\n                        <img src={swiper2} />\n                    </div>\n                    <div className=\"swiper-slide\">\n                        <img src={swiper3} />\n                    </div>\n                    <div className=\"swiper-slide\">\n                        <img src={swiper4} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/views/home/index.tsx","/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ssr-window/dist/ssr-window.esm.js\n// module id = 1091\n// module chunks = 6","/**\n * Swiper 4.5.0\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://www.idangero.us/swiper/\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: February 22, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter(paramsPart => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  const testDiv = document.createElement('div');\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!(window.navigator.pointerEnabled || window.PointerEvent || ('maxTouchPoints' in window.navigator && window.navigator.maxTouchPoints > 0)),\n    prefixedPointerEvents: !!window.navigator.msPointerEnabled,\n\n    transition: (function checkTransition() {\n      const style = testDiv.style;\n      return ('transition' in style || 'webkitTransition' in style || 'MozTransition' in style);\n    }()),\n    transforms3d: (window.Modernizr && window.Modernizr.csstransforms3d === true) || (function checkTransforms3d() {\n      const style = testDiv.style;\n      return ('webkitPerspective' in style || 'MozPerspective' in style || 'OPerspective' in style || 'MsPerspective' in style || 'perspective' in style);\n    }()),\n\n    flexbox: (function checkFlexbox() {\n      const style = testDiv.style;\n      const styles = ('alignItems webkitAlignItems webkitBoxAlign msFlexAlign mozBoxAlign webkitFlexDirection msFlexDirection mozBoxDirection mozBoxOrient webkitBoxDirection webkitBoxOrient').split(' ');\n      for (let i = 0; i < styles.length; i += 1) {\n        if (styles[i] in style) return true;\n      }\n      return false;\n    }()),\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isIE: !!window.navigator.userAgent.match(/Trident/g) || !!window.navigator.userAgent.match(/MSIE/g),\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      handler.apply(self, args);\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach(m => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide\n        .css(\n          `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n          (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n        )\n        .attr('data-swiper-column', column)\n        .attr('data-swiper-row', row);\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (!Support.flexbox || params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.css({ marginLeft: `${spaceBetween}px` });\n      else slides.css({ marginRight: `${spaceBetween}px` });\n    } else slides.css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size)\n                || (slideAfter > 0 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  swiper.emit('slideChange');\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (!params.virtualTranslate) {\n    if (Support.transforms3d) $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n    else $wrapperEl.transform(`translate(${x}px, ${y}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  swiper.$wrapperEl.transition(duration);\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex } = swiper;\n  swiper.animating = false;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n\n  if (speed === 0 || !Support.transition) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map(val => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  const prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  if (snapIndex < swiper.snapGrid.length - 1) {\n    const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if ((translate - currentSnap) > (nextSnap - currentSnap) / 2) {\n      index = swiper.params.slidesPerGroup;\n    }\n  }\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = parseInt(params.loopedSlides || params.slidesPerView, 10);\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n  const {\n    params, activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if ((params.slidesPerView === 'auto' && activeIndex >= loopedSlides * 2) || (activeIndex >= slides.length - loopedSlides)) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked)) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    windows: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    cordova: window.cordova || window.phonegap,\n    phonegap: window.cordova || window.phonegap,\n  };\n\n  const windows = ua.match(/(Windows Phone);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  const ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n\n\n  // Windows\n  if (windows) {\n    device.os = 'windows';\n    device.osVersion = windows[2];\n    device.windows = true;\n  }\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.iphone = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Desktop\n  device.desktop = !(device.os || device.android || device.webView);\n\n  // Webview\n  device.webView = (iphone || ipad || ipod) && ua.match(/.*AppleWebKit(?!.*Safari)/i);\n\n  // Minimal UI\n  if (device.os && device.os === 'ios') {\n    const osVersionArr = device.osVersion.split('.');\n    const metaViewport = document.querySelector('meta[name=\"viewport\"]');\n    device.minimalUi = !device.webView\n      && (ipod || iphone)\n      && (osVersionArr[0] * 1 === 7 ? osVersionArr[1] * 1 >= 1 : osVersionArr[0] * 1 > 7)\n      && metaViewport && metaViewport.getAttribute('content').indexOf('minimal-ui') >= 0;\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $(e.target).closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$(e).closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($(e.target).is(data.formElements)) preventDefault = false;\n    if (\n      document.activeElement\n      && $(document.activeElement).is(data.formElements)\n      && document.activeElement !== e.target\n    ) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const pageX = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  e.preventDefault();\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) > 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      data.clickTimeout = Utils.nextTick(() => {\n        if (!swiper || swiper.destroyed) return;\n        swiper.emit('click', e);\n      }, 300);\n    }\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      if (data.clickTimeout) clearTimeout(data.clickTimeout);\n      swiper.emit('doubleTap', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  if (params.freeMode) {\n    const newTranslate = Math.min(Math.max(swiper.translate, swiper.maxTranslate()), swiper.minTranslate());\n    swiper.setTranslate(newTranslate);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n  } else {\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n      swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  {\n    swiper.onTouchStart = onTouchStart.bind(swiper);\n    swiper.onTouchMove = onTouchMove.bind(swiper);\n    swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n        target.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.addEventListener('mousedown', swiper.onTouchStart, false);\n        document.addEventListener('mousemove', swiper.onTouchMove, capture);\n        document.addEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.addEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const target = params.touchEventsTarget === 'container' ? el : wrapperEl;\n  const capture = !!params.nested;\n\n  // Touch Events\n  {\n    if (!Support.touch && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n      target.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n      document.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      document.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n      if (Support.touch) {\n        const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n        target.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n        target.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n        target.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      }\n      if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n        target.removeEventListener('mousedown', swiper.onTouchStart, false);\n        document.removeEventListener('mousemove', swiper.onTouchMove, capture);\n        document.removeEventListener('mouseup', swiper.onTouchEnd, false);\n      }\n    }\n    // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) {\n      target.removeEventListener('click', swiper.onClick, true);\n    }\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Set breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  const swiper = this;\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (swiper.params.breakpointsInverse) {\n      if (point <= window.innerWidth) {\n        breakpoint = point;\n      }\n    } else if (point >= window.innerWidth && !breakpoint) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (!Support.flexbox) {\n    suffixes.push('no-flexbox');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n  // WP8 Touch Events Fix\n  if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n    suffixes.push(`wp8-${params.direction}`);\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const wasLocked = swiper.isLocked;\n\n  swiper.isLocked = swiper.snapGrid.length === 1;\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsInverse: false,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: true,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    const $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        } else if (Support.prefixedPointerEvents) {\n          desktop = ['MSPointerDown', 'MSPointerMove', 'MSPointerUp'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    if (currentDirection === 'vertical') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}vertical wp8-vertical`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n    if (currentDirection === 'horizontal') {\n      swiper.$el\n        .removeClass(`${swiper.params.containerModifierClass}horizontal wp8-horizontal`)\n        .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n      if ((Browser.isIE || Browser.isEdge) && (Support.pointerEvents || Support.prefixedPointerEvents)) {\n        swiper.$el.addClass(`${swiper.params.containerModifierClass}wp8-${newDirection}`);\n      }\n    }\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index')\n          .removeAttr('data-swiper-column')\n          .removeAttr('data-swiper-row');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cache[cachedIndex];\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40))) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38))) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if ((kc === 39 && !rtl) || (kc === 37 && rtl)) swiper.slideNext();\n      if ((kc === 37 && !rtl) || (kc === 39 && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 40) swiper.slideNext();\n      if (kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document;\n\n  if (!isSupported) {\n    const element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document.implementation\n    && document.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  event: (function getEvent() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  }()),\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      if (Utils.now() - swiper.mousewheel.lastScrollTime > 60) {\n        if (delta < 0) {\n          if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n            swiper.slideNext();\n            swiper.emit('scroll', e);\n          } else if (params.releaseOnEdges) return true;\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n          swiper.slidePrev();\n          swiper.emit('scroll', e);\n        } else if (params.releaseOnEdges) return true;\n      }\n      swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    } else {\n      // Freemode or scrollContainer:\n      if (swiper.params.loop) {\n        swiper.loopFix();\n      }\n      let position = swiper.getTranslate() + (delta * params.sensitivity);\n      const wasBeginning = swiper.isBeginning;\n      const wasEnd = swiper.isEnd;\n\n      if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n      if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n      swiper.setTransition(0);\n      swiper.setTranslate(position);\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n\n      if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n        swiper.updateSlidesClasses();\n      }\n\n      if (swiper.params.freeModeSticky) {\n        clearTimeout(swiper.mousewheel.timeout);\n        swiper.mousewheel.timeout = Utils.nextTick(() => {\n          swiper.slideToClosest();\n        }, 300);\n      }\n      // Emit event\n      swiper.emit('scroll', e);\n\n      // Stop autoplay\n      if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n      // Return page scroll on edge positions\n      if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    if (!Mousewheel.event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(Mousewheel.event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        lastScrollTime: Utils.now(),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          $firstDisplayedBullet\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev`)\n            .prev()\n            .addClass(`${params.bulletActiveClass}-prev-prev`);\n          $lastDisplayedBullet\n            .next()\n            .addClass(`${params.bulletActiveClass}-next`)\n            .next()\n            .addClass(`${params.bulletActiveClass}-next-next`);\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      } else {\n        $dragEl.transform(`translateX(${newPos}px)`);\n      }\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      if (Support.transforms3d) {\n        $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      } else {\n        $dragEl.transform(`translateY(${newPos}px)`);\n      }\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const { $el, dragSize, trackSize } = scrollbar;\n\n    let pointerPosition;\n    if (swiper.isHorizontal()) {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageX : e.pageX || e.clientX);\n    } else {\n      pointerPosition = ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].pageY : e.pageY || e.clientY);\n    }\n    let positionRatio;\n    positionRatio = ((pointerPosition) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/swiper/dist/js/swiper.esm.bundle.js\n// module id = 1112\n// module chunks = 6","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dom7/dist/dom7.modular.js\n// module id = 1113\n// module chunks = 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./index.scss\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./index.scss\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js!./index.scss\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/home/index.scss\n// module id = 1114\n// module chunks = 6","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(undefined);\n// imports\nexports.i(require(\"-!../../../node_modules/css-loader/index.js!swiper/dist/css/swiper.min.css\"), \"\");\n\n// module\nexports.push([module.id, \".home-swiper {\\n  text-align: center; }\\n  .home-swiper img {\\n    width: 600px;\\n    height: 600px; }\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/sass-loader/lib/loader.js!./src/views/home/index.scss\n// module id = 1115\n// module chunks = 6","exports = module.exports = require(\"../../../css-loader/lib/css-base.js\")(undefined);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * Swiper 4.5.0\\n * Most modern mobile touch slider and framework with hardware accelerated transitions\\n * http://www.idangero.us/swiper/\\n *\\n * Copyright 2014-2019 Vladimir Kharlampidi\\n *\\n * Released under the MIT License\\n *\\n * Released on: February 22, 2019\\n */\\n.swiper-container{margin:0 auto;position:relative;overflow:hidden;list-style:none;padding:0;z-index:1}.swiper-container-no-flexbox .swiper-slide{float:left}.swiper-container-vertical>.swiper-wrapper{-webkit-box-orient:vertical;-webkit-box-direction:normal;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}.swiper-wrapper{position:relative;width:100%;height:100%;z-index:1;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;-o-transition-property:transform;transition-property:transform;transition-property:transform,-webkit-transform;-webkit-box-sizing:content-box;box-sizing:content-box}.swiper-container-android .swiper-slide,.swiper-wrapper{-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.swiper-container-multirow>.swiper-wrapper{-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap}.swiper-container-free-mode>.swiper-wrapper{-webkit-transition-timing-function:ease-out;-o-transition-timing-function:ease-out;transition-timing-function:ease-out;margin:0 auto}.swiper-slide{-webkit-flex-shrink:0;-ms-flex-negative:0;flex-shrink:0;width:100%;height:100%;position:relative;-webkit-transition-property:-webkit-transform;transition-property:-webkit-transform;-o-transition-property:transform;transition-property:transform;transition-property:transform,-webkit-transform}.swiper-slide-invisible-blank{visibility:hidden}.swiper-container-autoheight,.swiper-container-autoheight .swiper-slide{height:auto}.swiper-container-autoheight .swiper-wrapper{-webkit-box-align:start;-webkit-align-items:flex-start;-ms-flex-align:start;align-items:flex-start;-webkit-transition-property:height,-webkit-transform;transition-property:height,-webkit-transform;-o-transition-property:transform,height;transition-property:transform,height;transition-property:transform,height,-webkit-transform}.swiper-container-3d{-webkit-perspective:1200px;perspective:1200px}.swiper-container-3d .swiper-cube-shadow,.swiper-container-3d .swiper-slide,.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top,.swiper-container-3d .swiper-wrapper{-webkit-transform-style:preserve-3d;transform-style:preserve-3d}.swiper-container-3d .swiper-slide-shadow-bottom,.swiper-container-3d .swiper-slide-shadow-left,.swiper-container-3d .swiper-slide-shadow-right,.swiper-container-3d .swiper-slide-shadow-top{position:absolute;left:0;top:0;width:100%;height:100%;pointer-events:none;z-index:10}.swiper-container-3d .swiper-slide-shadow-left{background-image:-webkit-gradient(linear,right top,left top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(right,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(right,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to left,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-3d .swiper-slide-shadow-right{background-image:-webkit-gradient(linear,left top,right top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(left,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(left,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to right,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-3d .swiper-slide-shadow-top{background-image:-webkit-gradient(linear,left bottom,left top,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(bottom,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(bottom,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to top,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-3d .swiper-slide-shadow-bottom{background-image:-webkit-gradient(linear,left top,left bottom,from(rgba(0,0,0,.5)),to(rgba(0,0,0,0)));background-image:-webkit-linear-gradient(top,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:-o-linear-gradient(top,rgba(0,0,0,.5),rgba(0,0,0,0));background-image:linear-gradient(to bottom,rgba(0,0,0,.5),rgba(0,0,0,0))}.swiper-container-wp8-horizontal,.swiper-container-wp8-horizontal>.swiper-wrapper{-ms-touch-action:pan-y;touch-action:pan-y}.swiper-container-wp8-vertical,.swiper-container-wp8-vertical>.swiper-wrapper{-ms-touch-action:pan-x;touch-action:pan-x}.swiper-button-next,.swiper-button-prev{position:absolute;top:50%;width:27px;height:44px;margin-top:-22px;z-index:10;cursor:pointer;background-size:27px 44px;background-position:center;background-repeat:no-repeat}.swiper-button-next.swiper-button-disabled,.swiper-button-prev.swiper-button-disabled{opacity:.35;cursor:auto;pointer-events:none}.swiper-button-prev,.swiper-container-rtl .swiper-button-next{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23007aff'%2F%3E%3C%2Fsvg%3E\\\");left:10px;right:auto}.swiper-button-next,.swiper-container-rtl .swiper-button-prev{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23007aff'%2F%3E%3C%2Fsvg%3E\\\");right:10px;left:auto}.swiper-button-prev.swiper-button-white,.swiper-container-rtl .swiper-button-next.swiper-button-white{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23ffffff'%2F%3E%3C%2Fsvg%3E\\\")}.swiper-button-next.swiper-button-white,.swiper-container-rtl .swiper-button-prev.swiper-button-white{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23ffffff'%2F%3E%3C%2Fsvg%3E\\\")}.swiper-button-prev.swiper-button-black,.swiper-container-rtl .swiper-button-next.swiper-button-black{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M0%2C22L22%2C0l2.1%2C2.1L4.2%2C22l19.9%2C19.9L22%2C44L0%2C22L0%2C22L0%2C22z'%20fill%3D'%23000000'%2F%3E%3C%2Fsvg%3E\\\")}.swiper-button-next.swiper-button-black,.swiper-container-rtl .swiper-button-prev.swiper-button-black{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20viewBox%3D'0%200%2027%2044'%3E%3Cpath%20d%3D'M27%2C22L27%2C22L5%2C44l-2.1-2.1L22.8%2C22L2.9%2C2.1L5%2C0L27%2C22L27%2C22z'%20fill%3D'%23000000'%2F%3E%3C%2Fsvg%3E\\\")}.swiper-button-lock{display:none}.swiper-pagination{position:absolute;text-align:center;-webkit-transition:.3s opacity;-o-transition:.3s opacity;transition:.3s opacity;-webkit-transform:translate3d(0,0,0);transform:translate3d(0,0,0);z-index:10}.swiper-pagination.swiper-pagination-hidden{opacity:0}.swiper-container-horizontal>.swiper-pagination-bullets,.swiper-pagination-custom,.swiper-pagination-fraction{bottom:10px;left:0;width:100%}.swiper-pagination-bullets-dynamic{overflow:hidden;font-size:0}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33);position:relative}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-main{-webkit-transform:scale(1);-ms-transform:scale(1);transform:scale(1)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev{-webkit-transform:scale(.66);-ms-transform:scale(.66);transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-prev-prev{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next{-webkit-transform:scale(.66);-ms-transform:scale(.66);transform:scale(.66)}.swiper-pagination-bullets-dynamic .swiper-pagination-bullet-active-next-next{-webkit-transform:scale(.33);-ms-transform:scale(.33);transform:scale(.33)}.swiper-pagination-bullet{width:8px;height:8px;display:inline-block;border-radius:100%;background:#000;opacity:.2}button.swiper-pagination-bullet{border:none;margin:0;padding:0;-webkit-box-shadow:none;box-shadow:none;-webkit-appearance:none;-moz-appearance:none;appearance:none}.swiper-pagination-clickable .swiper-pagination-bullet{cursor:pointer}.swiper-pagination-bullet-active{opacity:1;background:#007aff}.swiper-container-vertical>.swiper-pagination-bullets{right:10px;top:50%;-webkit-transform:translate3d(0,-50%,0);transform:translate3d(0,-50%,0)}.swiper-container-vertical>.swiper-pagination-bullets .swiper-pagination-bullet{margin:6px 0;display:block}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{top:50%;-webkit-transform:translateY(-50%);-ms-transform:translateY(-50%);transform:translateY(-50%);width:8px}.swiper-container-vertical>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{display:inline-block;-webkit-transition:.2s top,.2s -webkit-transform;transition:.2s top,.2s -webkit-transform;-o-transition:.2s transform,.2s top;transition:.2s transform,.2s top;transition:.2s transform,.2s top,.2s -webkit-transform}.swiper-container-horizontal>.swiper-pagination-bullets .swiper-pagination-bullet{margin:0 4px}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic{left:50%;-webkit-transform:translateX(-50%);-ms-transform:translateX(-50%);transform:translateX(-50%);white-space:nowrap}.swiper-container-horizontal>.swiper-pagination-bullets.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transition:.2s left,.2s -webkit-transform;transition:.2s left,.2s -webkit-transform;-o-transition:.2s transform,.2s left;transition:.2s transform,.2s left;transition:.2s transform,.2s left,.2s -webkit-transform}.swiper-container-horizontal.swiper-container-rtl>.swiper-pagination-bullets-dynamic .swiper-pagination-bullet{-webkit-transition:.2s right,.2s -webkit-transform;transition:.2s right,.2s -webkit-transform;-o-transition:.2s transform,.2s right;transition:.2s transform,.2s right;transition:.2s transform,.2s right,.2s -webkit-transform}.swiper-pagination-progressbar{background:rgba(0,0,0,.25);position:absolute}.swiper-pagination-progressbar .swiper-pagination-progressbar-fill{background:#007aff;position:absolute;left:0;top:0;width:100%;height:100%;-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0);-webkit-transform-origin:left top;-ms-transform-origin:left top;transform-origin:left top}.swiper-container-rtl .swiper-pagination-progressbar .swiper-pagination-progressbar-fill{-webkit-transform-origin:right top;-ms-transform-origin:right top;transform-origin:right top}.swiper-container-horizontal>.swiper-pagination-progressbar,.swiper-container-vertical>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite{width:100%;height:4px;left:0;top:0}.swiper-container-horizontal>.swiper-pagination-progressbar.swiper-pagination-progressbar-opposite,.swiper-container-vertical>.swiper-pagination-progressbar{width:4px;height:100%;left:0;top:0}.swiper-pagination-white .swiper-pagination-bullet-active{background:#fff}.swiper-pagination-progressbar.swiper-pagination-white{background:rgba(255,255,255,.25)}.swiper-pagination-progressbar.swiper-pagination-white .swiper-pagination-progressbar-fill{background:#fff}.swiper-pagination-black .swiper-pagination-bullet-active{background:#000}.swiper-pagination-progressbar.swiper-pagination-black{background:rgba(0,0,0,.25)}.swiper-pagination-progressbar.swiper-pagination-black .swiper-pagination-progressbar-fill{background:#000}.swiper-pagination-lock{display:none}.swiper-scrollbar{border-radius:10px;position:relative;-ms-touch-action:none;background:rgba(0,0,0,.1)}.swiper-container-horizontal>.swiper-scrollbar{position:absolute;left:1%;bottom:3px;z-index:50;height:5px;width:98%}.swiper-container-vertical>.swiper-scrollbar{position:absolute;right:3px;top:1%;z-index:50;width:5px;height:98%}.swiper-scrollbar-drag{height:100%;width:100%;position:relative;background:rgba(0,0,0,.5);border-radius:10px;left:0;top:0}.swiper-scrollbar-cursor-drag{cursor:move}.swiper-scrollbar-lock{display:none}.swiper-zoom-container{width:100%;height:100%;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-webkit-align-items:center;-ms-flex-align:center;align-items:center;text-align:center}.swiper-zoom-container>canvas,.swiper-zoom-container>img,.swiper-zoom-container>svg{max-width:100%;max-height:100%;-o-object-fit:contain;object-fit:contain}.swiper-slide-zoomed{cursor:move}.swiper-lazy-preloader{width:42px;height:42px;position:absolute;left:50%;top:50%;margin-left:-21px;margin-top:-21px;z-index:10;-webkit-transform-origin:50%;-ms-transform-origin:50%;transform-origin:50%;-webkit-animation:swiper-preloader-spin 1s steps(12,end) infinite;animation:swiper-preloader-spin 1s steps(12,end) infinite}.swiper-lazy-preloader:after{display:block;content:'';width:100%;height:100%;background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D'0%200%20120%20120'%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20xmlns%3Axlink%3D'http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink'%3E%3Cdefs%3E%3Cline%20id%3D'l'%20x1%3D'60'%20x2%3D'60'%20y1%3D'7'%20y2%3D'27'%20stroke%3D'%236c6c6c'%20stroke-width%3D'11'%20stroke-linecap%3D'round'%2F%3E%3C%2Fdefs%3E%3Cg%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(30%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(60%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(90%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(120%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(150%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.37'%20transform%3D'rotate(180%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.46'%20transform%3D'rotate(210%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.56'%20transform%3D'rotate(240%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.66'%20transform%3D'rotate(270%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.75'%20transform%3D'rotate(300%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.85'%20transform%3D'rotate(330%2060%2C60)'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\");background-position:50%;background-size:100%;background-repeat:no-repeat}.swiper-lazy-preloader-white:after{background-image:url(\\\"data:image/svg+xml;charset=utf-8,%3Csvg%20viewBox%3D'0%200%20120%20120'%20xmlns%3D'http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg'%20xmlns%3Axlink%3D'http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink'%3E%3Cdefs%3E%3Cline%20id%3D'l'%20x1%3D'60'%20x2%3D'60'%20y1%3D'7'%20y2%3D'27'%20stroke%3D'%23fff'%20stroke-width%3D'11'%20stroke-linecap%3D'round'%2F%3E%3C%2Fdefs%3E%3Cg%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(30%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(60%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(90%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(120%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.27'%20transform%3D'rotate(150%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.37'%20transform%3D'rotate(180%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.46'%20transform%3D'rotate(210%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.56'%20transform%3D'rotate(240%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.66'%20transform%3D'rotate(270%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.75'%20transform%3D'rotate(300%2060%2C60)'%2F%3E%3Cuse%20xlink%3Ahref%3D'%23l'%20opacity%3D'.85'%20transform%3D'rotate(330%2060%2C60)'%2F%3E%3C%2Fg%3E%3C%2Fsvg%3E\\\")}@-webkit-keyframes swiper-preloader-spin{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}@keyframes swiper-preloader-spin{100%{-webkit-transform:rotate(360deg);transform:rotate(360deg)}}.swiper-container .swiper-notification{position:absolute;left:0;top:0;pointer-events:none;opacity:0;z-index:-1000}.swiper-container-fade.swiper-container-free-mode .swiper-slide{-webkit-transition-timing-function:ease-out;-o-transition-timing-function:ease-out;transition-timing-function:ease-out}.swiper-container-fade .swiper-slide{pointer-events:none;-webkit-transition-property:opacity;-o-transition-property:opacity;transition-property:opacity}.swiper-container-fade .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-fade .swiper-slide-active,.swiper-container-fade .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-cube{overflow:visible}.swiper-container-cube .swiper-slide{pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1;visibility:hidden;-webkit-transform-origin:0 0;-ms-transform-origin:0 0;transform-origin:0 0;width:100%;height:100%}.swiper-container-cube .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-cube.swiper-container-rtl .swiper-slide{-webkit-transform-origin:100% 0;-ms-transform-origin:100% 0;transform-origin:100% 0}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-cube .swiper-slide-active,.swiper-container-cube .swiper-slide-next,.swiper-container-cube .swiper-slide-next+.swiper-slide,.swiper-container-cube .swiper-slide-prev{pointer-events:auto;visibility:visible}.swiper-container-cube .swiper-slide-shadow-bottom,.swiper-container-cube .swiper-slide-shadow-left,.swiper-container-cube .swiper-slide-shadow-right,.swiper-container-cube .swiper-slide-shadow-top{z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-container-cube .swiper-cube-shadow{position:absolute;left:0;bottom:0;width:100%;height:100%;background:#000;opacity:.6;-webkit-filter:blur(50px);filter:blur(50px);z-index:0}.swiper-container-flip{overflow:visible}.swiper-container-flip .swiper-slide{pointer-events:none;-webkit-backface-visibility:hidden;backface-visibility:hidden;z-index:1}.swiper-container-flip .swiper-slide .swiper-slide{pointer-events:none}.swiper-container-flip .swiper-slide-active,.swiper-container-flip .swiper-slide-active .swiper-slide-active{pointer-events:auto}.swiper-container-flip .swiper-slide-shadow-bottom,.swiper-container-flip .swiper-slide-shadow-left,.swiper-container-flip .swiper-slide-shadow-right,.swiper-container-flip .swiper-slide-shadow-top{z-index:0;-webkit-backface-visibility:hidden;backface-visibility:hidden}.swiper-container-coverflow .swiper-wrapper{-ms-perspective:1200px}\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader!./node_modules/swiper/dist/css/swiper.min.css\n// module id = 1116\n// module chunks = 6","module.exports = __webpack_public_path__ + \"static/media/swiper1.a2f85c0f.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/swiper/swiper1.jpg\n// module id = 1117\n// module chunks = 6","module.exports = __webpack_public_path__ + \"static/media/swiper2.cfccb271.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/swiper/swiper2.jpg\n// module id = 1118\n// module chunks = 6","module.exports = __webpack_public_path__ + \"static/media/swiper3.de992282.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/swiper/swiper3.jpg\n// module id = 1119\n// module chunks = 6","module.exports = __webpack_public_path__ + \"static/media/swiper4.c44ce194.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/images/swiper/swiper4.jpg\n// module id = 1120\n// module chunks = 6"],"sourceRoot":""}